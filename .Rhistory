ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#B2DF8A",kind="sd", conf=0.95, label=FALSE, show.groups = "CHA")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#33A02C",kind="sd", conf=0.95, label=FALSE, show.groups = "DAL")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#A6CEE3",kind="sd", conf=0.95, label=FALSE, show.groups = "BAL")
#add data points
points(NMDS, display="sites", select=which(env.matrix$Site=="BAL"),pch=19, col="#A6CEE3")
points(NMDS, display="sites", select=which(env.matrix$Site=="CHA"), pch=17, col="#B2DF8A")
points(NMDS, display="sites", select=which(env.matrix$Site=="DAL"), pch=15, col="#33A02C")
#add legend
legend(0.7,1.12, title=NULL, pch=c(19,17,15), col=c("#A6CEE3","#B2DF8A","#33A02C"), cex=1.55, legend=c("Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
plot(NMDS, disp='sites', type="n")
title(main="Central", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#FB9A99",kind="sd", conf=0.95, label=FALSE, show.groups = "DGM")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#1F78B4",kind="sd", conf=0.95, label=FALSE, show.groups = "BFB")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#FDBF6F",kind="sd", conf=0.95, label=FALSE, show.groups = "SSH")
#add data points
points(NMDS, display="sites", select=which(env.matrix$Site=="SSH"),pch=19, col="#FDBF6F")
points(NMDS, display="sites", select=which(env.matrix$Site=="DGM"), pch=17, col="#FB9A99")
points(NMDS, display="sites", select=which(env.matrix$Site=="BFB"), pch=15, col="#1F78B4")
#add legend
legend(0.40,1.12, title=NULL, pch=c(19,17,15), col=c("#FDBF6F","#FB9A99","#1F78B4"), cex=1.55, legend=c("Slate shale hill", "Dusty Goldenrod meadow", "Bedford barren"))
plot(NMDS, disp='sites', type="n")
title(main="South", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#CAB2D6",kind="sd", conf=0.95, label=FALSE, show.groups = "WPR")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#E31A1C",kind="sd", conf=0.95, label=FALSE, show.groups = "SNY")
ordiellipse(NMDS, env.matrix$Site, draw="polygon", col="#FF7F00",kind="sd", conf=0.95, label=FALSE, show.groups = "WLR")
#add data points
points(NMDS, display="sites", select=which(env.matrix$Site=="WPR"), pch=17, col="#CAB2D6")
points(NMDS, display="sites", select=which(env.matrix$Site=="SNY"), pch=15, col="#E31A1C")
points(NMDS, display="sites", select=which(env.matrix$Site=="WLR"),pch=19, col="#FF7F00")
#add legend
legend(0.85,1.12, title=NULL, pch=c(19,17,15), col=c("#FF7F00","#CAB2D6","#E31A1C"), cex=1.55, legend=c("W ladder", "W picnic rock", "Synder hollow"))
#bootstrapping and testing for differences between the groups (sites)
fit<-adonis(com.matrix ~ Site, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (sites)
fit<-adonis(com.matrix ~ Site, data = env.matrix, permutations = 999, method="bray")
fit
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$Site))
#bootstrapping and testing for differences between the groups (sites)
fit<-adonis(com.matrix ~ Site, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (sites)
fit<-adonis(com.matrix ~ Site, data = env.matrix, permutations = 999, method="bray")
fit
install.packages("devtools")
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
citation("pairwiseAdonis")
pairwise.adonis(com.matrix, env.matrix$region)
pairwise.adonis(com.matrix, env.matrix$Site)
bee_bowls <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees%20-%20Bowl_species.csv",na.strings = NULL)
summary(bee_bowls)
str(bee_bowls)
bee_ramps <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees%20-%20Ramp_species.csv",na.strings = NULL)
summary(bee_ramps)
str(bee_ramps)
#add trap type as a column on each data file
bee_bowls$Trap="bowl"
bee_ramps$Trap="ramp"
#combine data tables
library (plyr)
bees <- rbind.fill (bee_bowls, bee_ramps)
#add column for region (south central north)
bees$region<-ifelse(bees$Site=="WLR", "South",
ifelse(bees$Site=="WPR", "South",
ifelse(bees$Site=="SNY", "South",
ifelse(bees$Site=="DAL", "North",
ifelse(bees$Site=="BAL", "North",
ifelse(bees$Site == "CHA", "North", "Central")
)))))
str(bees)
#To obtain richness counts
bees.rowsums <- rowSums(bees[,4:29]>0)
bees$richness <- bees.rowsums
#To obtain abundance counts
bees.abun <- rowSums(bees[,4:29])
bees$abundance <- bees.abun
library(vegan)
#calculate Shannon diversity
diversity <-diversity(bees[,4:29])
bees$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(bees[,4:29]))
bees$evenness <- evenness
#look at data set
summary(bees)
str(bees)
View(bees)
library (multcompView) #to view letters
library (car) #for Anova (which is needed because of negative binomial)
Anova(richmodel)
anova (richmodel)
Anova(richmodel)
Anova(abunmodel)
Anova(divmodel)
Anova(evenmodel)
Anova(richmodel) #region not sig
pairwise.adonis(com.matrix, env.matrix$region)
richmodel <- lmer(richness~region+Date+Trap+Site, data=bees)  #AIC = 179
richmodel <- lm(richness~region+Date+Trap+Site, data=bees)  #AIC = 179
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
rich.emm.s
AIC(richmodel)
richmodel <- lm(richness~region+Date+Site, data=bees)  #AIC = 179
summary(richmodel)
AIC(richmodel)
richmodel <- lm(richness~region+Trap+Site, data=bees)  #AIC = 179
summary(richmodel)
AIC(richmodel)
richmodel <- lm(richness~region+Date+Trap, data=bees)  #AIC = 179
summary(richmodel)
AIC(richmodel)
richmodel <- lm(richness~region+Date+Trap+(1|Site), data=bees)  #AIC = 179
richmodel <- lmer(richness~region+Date+Trap+(1|Site), data=bees)  #AIC = 179
summary(richmodel)
AIC(richmodel)
richmodel <- lm(richness~region+Date+Trap+Site, data=bees)  #AIC = 171
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
rich.emm.s
#results: same for all
rich.cld.s<-multcomp::cld(rich.emm.s, alpha = 0.05, Letters = LETTERS)
rich.cld.s
##abundance linear mixed effects model
abunmodel <- lm(abundance~region+Date+Trap+Site, data=bees)  #AIC = 245
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same for all
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
abun.emm.s<-emmeans(abunmodel,pairwise~Site) #comparing site abundance
abun.emm.s
#results: same for all
abun.cld.s<-multcomp::cld(abun.emm.s, alpha = 0.05, Letters = LETTERS)
abun.cld.s
##diversity linear mixed effects model
divmodel <- lmer(diversity~region+Date+Trap+Site,data=bees)  #AIC = 93
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(divmodel)
AIC(divmodel)
div.emm<-emmeans(divmodel,pairwise~region) #comparing region diversity
div.emm
#results: same for all
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
div.emm.s<-emmeans(divmodel,pairwise~Site) #comparing site diversity
div.emm.s
#results: same for all
div.cld.s<-multcomp::cld(div.emm.s, alpha = 0.05, Letters = LETTERS)
div.cld.s
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region+Date+Trap+Site,data=bees)  #AIC = 1.35
summary(evenmodel)
AIC(evenmodel)
anova(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
even.emm.s<-emmeans(evenmodel,pairwise~Site) #comparing site richness
even.emm.s
richness.plot<-ggplot(bees, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
#site abundance by region
abundance.plot<-ggplot(bees, aes(x = factor(region, level = c("South","Central","North")), y = abundance, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="bottom")+
labs(title="", x="", y="Abundance")+
#theme (plot.title = element_text(hjust=0.5))+
#scale_y_continuous(trans="log10")+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
abundance.plot
#site diversity by region
diversity.plot<-ggplot(bees, aes(x = factor(region,level = c("South","Central","North")), y = diversity, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
diversity.plot
#site evenness by region
evenness.plot<-ggplot(bees, aes(x = factor(region,level = c("South","Central","North")), y = evenness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="Sites by Region", y="Evenness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
evenness.plot
###
#mush together plots
library(ggpubr)
bees_boxplot <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
#labels = c("A", "B", "C", "D"),
ncol = 1, nrow = 4,
common.legend = TRUE, legend = "bottom")
bees_boxplot
pdf("bees_boxplot.pdf", height=8, width=8) #height and width in inches
bees_boxplot
dev.off()
#Create matrix of environmental variables
env.matrix_bees<-bees[c(1:3,30:35)]
#create matrix of community variables
com.matrix_bees<-bees[c(4:29)]
#ordination by NMDS
NMDS_bees<-metaMDS(com.matrix_bees, distance="bray", k=2, autotransform=TRUE, trymax=300)
plot(NMDS_bees, disp='sites', type="n")
#title(main="Bee community composition by region", cex.main=1.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS_bees, env.matrix_bees$region, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "South")
ordiellipse(NMDS_bees, env.matrix_bees$region, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "North")
ordiellipse(NMDS_bees, env.matrix_bees$region, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "Central")
#add data points
points(NMDS_bees, display="sites", select=which(env.matrix_bees$region=="North"),pch=19, col="#E69F00")
points(NMDS_bees, display="sites", select=which(env.matrix_bees$region=="Central"), pch=17, col="#009E73")
points(NMDS_bees, display="sites", select=which(env.matrix_bees$region=="South"), pch=15, col="#CC79A7")
#add legend
#legend(8.9,1.12, title=NULL, pch=c(19,17,15), col=c("#E69F00","#009E73","#CC79A7"), cex=1.5, legend=c("North", "Central", "South"))
#bootstrapping and testing for differences between the groups (regions)
fit<-adonis(com.matrix_bees ~ region, data = env.matrix_bees, permutations = 999, method="bray")
fit
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix_bees)
anova(betadisper(distances_data, env.matrix_bees$region))
#check assumptions
dotchart(bees$richness, main = "richness", group = bees$region) # way to visualize outliers
#check assumptions
dotchart(bees$richness, main = "richness", group = bees$region) # way to visualize outliers
with(bees, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(bees, bartlett.test(richness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richmodel) # check distribution of residuals
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richmodel)
influenceIndexPlot(richmodel, vars = c("Cook"), id = list(n = 3))
#check assumptions
dotchart(bees$abundance, main = "abundance", group = bees$region) # way to visualize outliers
with(bees, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(bees, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abunmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abunmodel)
influenceIndexPlot(abunmodel, vars = c("Cook"), id = list(n = 3))
#check assumptions
dotchart(bees$diversity, main = "diversity", group = bees$region) # way to visualize outliers
with(bees, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(bees, bartlett.test(diversity ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(divmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(divmodel))
qqline(resid(divmodel))
divmodel <- lmer(diversity~region+Date+Trap+Site,data=bees)  #AIC = 293
summary(divmodel)
AIC(divmodel)
anova(divmodel)
plot(divmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(divmodel))
qqline(resid(divmodel))
plot(simulateResiduals(divmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(divmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(divmodel)
influenceIndexPlot(divmodel, vars = c("Cook"), id = list(n = 3))
#check assumptions
dotchart(bees$evenness, main = "evenness", group = bees$region) # way to visualize outliers
with(bees, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(bees, bartlett.test(evenness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(evenmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenmodel))
qqline(resid(evenmodel))
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(evenmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenmodel)
influenceIndexPlot(evenmodel, vars = c("Cook"), id = list(n = 3))
#site richness by region
richness.plot<-ggplot(bees, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
#site abundance by region
abundance.plot<-ggplot(bees, aes(x = factor(region, level = c("South","Central","North")), y = abundance, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="bottom")+
labs(title="", x="", y="Abundance")+
#theme (plot.title = element_text(hjust=0.5))+
#scale_y_continuous(trans="log10")+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
abundance.plot
#site diversity by region
diversity.plot<-ggplot(bees, aes(x = factor(region,level = c("South","Central","North")), y = diversity, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
diversity.plot
pairwise.adonis(com.matrix_bees, env.matrix_bees$Site)
pairwise.adonis(com.matrix_bees, env.matrix_bees$region)
#species accumulation
library (BiodiversityR)
library(ggplot2)
#individual curves for each trap type
pitfall.com.matrix_order<-pitfall_order[c(5:16)]
north <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees_north.csv",na.strings = NULL)
central <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees_central.csv",na.strings = NULL)
south <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees_south.csv",na.strings = NULL)
View(south)
#individual curves for each region
north.com.matrix<-north[c(4:29)]
north_curve<-accumresult(north.com.matrix, method = "exact", permutations = 1000)
central.com.matrix<-central[c(4:29)]
central_curve<-accumresult(central.com.matrix, method = "exact", permutations = 1000)
south.com.matrix<-south[c(4:29)]
south_curve<-accumresult(south.com.matrix, method = "exact", permutations = 1000)
#calculates species richness for each sample
specnumber(com.matrix_bees) #ranges from 1 to 20
#calculates species richness by treatment (region)
specnumber(com.matrix_bees, groups = insects$region) #jar=26; pitfall=21; ramp=35; sticky=31
#calculates species richness by treatment (region)
specnumber(com.matrix_bees, groups = bees$region) #jar=26; pitfall=21; ramp=35; sticky=31
#total richness and jackknife
rich <- diversityresult(com.matrix_bees, y=NULL, index = "richness")
rich # 39
j1 <- diversityresult(com.matrix_bees, y=NULL, index = "jack1")
j1 # 43.969697
#69%
j2 <- diversityresult(com.matrix_bees, y=NULL, index = "jack2")
j2 # 44.98167
#north jackknife; richness = 5
j1.n <- diversityresult(north.com.matrix, y=NULL, index = "jack1")
j1.n # 32.833333
#74%
j2.n <- diversityresult(north.com.matrix, y=NULL, index = "jack2")
j2.n # 35.783391
#central jackknife; richness = 19
j1.c <- diversityresult(central.com.matrix, y=NULL, index = "jack1")
j1.c # 24.897436
#71%
j2.c <- diversityresult(central.com.matrix, y=NULL, index = "jack2")
j2.c # 25.921053
#south jackknife; richness = 16
j1.s <- diversityresult(south.com.matrix, y=NULL, index = "jack1")
j1.s # 41.833333
#63%
j2.s <- diversityresult(south.com.matrix, y=NULL, index = "jack2")
j2.s # 46.641696
#BiodiversityR::accumcomp
Accum.1_functional <- accumcomp(com.matrix_bees, y=env.matrix_bees, factor='Trap',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
#plot
#empty canvas
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "Trap", shape = "Trap")
functional_accum
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "region", shape = "region")
functional_accum
#BiodiversityR::accumcomp
Accum.1_functional <- accumcomp(com.matrix_bees, y=env.matrix_bees, factor='region',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
#plot
#empty canvas
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "region", shape = "region")
functional_accum
pdf("functional_accum.pdf", height=6, width=8) #height and width in inches
accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "region", shape = "region")
accum
pdf("accum curve.pdf", height=6, width=8) #height and width in inches
accum
dev.off()
