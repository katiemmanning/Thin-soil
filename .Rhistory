richmodel <- lmer(richness~region:Site + (1|Date) + (1|Trap), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
richmodel <- lmer(richness~region + Site + (1|Date) + (1|Trap), data=allbugs)  #AIC = 1077
richmodel <- lmer(richness~region*Site + (1|Date) + (1|Trap), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + (1|Trap), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
rich.emm.s<-emmeans(richmodel,pairwise~Site:Replicate) #comparing site richness
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1077
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
richmodel <- lm(richness~region + Date + Trap + Site:Replicate, data=allbugs)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- glmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs, family = "poisson")
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
#check assumptions
dotchart(allbugs$richness, main = "richness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
if (!suppressWarnings(require(nortest))) install.packages("nortest")
citation("nortest")
if (!suppressWarnings(require(car))) install.packages("car")
citation("car")
if (!suppressWarnings(require(emmeans))) install.packages("emmeans")
citation("emmeans")
if (!suppressWarnings(require(bbmle))) install.packages("bbmle")
citation("bbmle")
if (!suppressWarnings(require(DHARMa))) install.packages("DHARMa")
citation("DHARMa")
if (!suppressWarnings(require(lme4))) install.packages("lme4")
citation("lme4")
if (!suppressWarnings(require(ggplot2))) install.packages("ggplot2")
citation("ggplot2")
if (!suppressWarnings(require(sjPlot))) install.packages("sjPlot")
citation("sjPlot")
if (!suppressWarnings(require(jtools))) install.packages("jtools")
citation("jtools")
if (!suppressWarnings(require(interactions))) install.packages("interactions")
citation("interactions")
with(allbugs, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1078
dotchart(allbugs$richness, main = "richness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(richness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(richmodel))
qqline(resid(richmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
richmodel <- glmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs, family = negative.binomial(0.5))
AIC(richmodel)
richmodel <- glmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs, family = negative.binomial(3))
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1078
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
richmodel <- lmer(richness~region + (1|Trap) + (1|Site:Replicate), data=allbugs)
AIC(richmodel)
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1078
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
richmodel <- lmer(richness~region + Date + (1|Trap) + (1|Site:Replicate), data=allbugs)#AIC = 1115
AIC(richmodel)
anova(richmodel)
richmodel <- lmer(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
AIC(richmodel)
anova(richmodel)
richmodel <- lm(richness~region + Date + Trap + Site:Replicate, data=allbugs)#AIC = 1066
AIC(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lm(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
richmodel <- lm(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
richmodel <- lmer(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
AIC(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1078
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
richmodel <- lmer(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)#AIC = 1066
AIC(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
richmodel <- lmer(richness~region + (1|Date) + Trap + Site + (1|Replicate), data=allbugs)#AIC = 1066
richmodel <- lmer(richness~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 1078
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
richmodel <- lmer(richness~region + (1|Date) + Trap + Site + (1|Replicate), data=allbugs)#AIC = 1066
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1078
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(richmodel)
AIC(richmodel)
anova(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
rich.emm.s
richmodel <- lmer(richness~region:Site + (1|Date) + Trap + (1|Replicate), data=allbugs)  #AIC = 1071
richmodel <- lmer(richness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1071
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
#can't compare Site with replicate nested
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
rich.emm.s
richmodel <- lmer(richness~region:Site + (1|Date) + Trap + (1|Replicate), data=allbugs)  #AIC = 1071
AIC(richmodel)
richmodel <- lmer(richness~region:Site + (1|Date) + Trap, data=allbugs)  #AIC = 1045
AIC(richmodel)
richmodel <- lmer(richness~region:Site + (1|Date) + Trap + (1|Replicate), data=allbugs)  #AIC = 1045
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
richmodel <- lmer(richness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1071
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
dotchart(allbugs$richness, main = "richness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(richness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
# check normality with these figures, are there outliers at either end
qqnorm(resid(richmodel))
qqline(resid(richmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richmodel)
influenceIndexPlot(richmodel, vars = c("Cook"), id = list(n = 3))
##abundance linear mixed effects model
abunmodel <- lmer(abundance~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = 3153
AIC(abunmodel)
allbugs.rowsums <- rowSums(allbugs[,4:49]>0)
allbugs$richness <- allbugs.rowsums
#To obtain abundance counts
allbugs.abun <- rowSums(allbugs[,4:49])
allbugs$abundance <- allbugs.abun
#load vegan
library(vegan)
#calculate Shannon diversity
diversity <-diversity(allbugs[,4:49])
allbugs$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(allbugs[,4:49]))
allbugs$evenness <- evenness
bowls <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Bowl_natural.csv",na.strings = NULL)
summary(bowls)
str(bowls)
ramps <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Ramp_natural.csv",na.strings = NULL)
summary(ramps)
str(ramps)
sticky <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Sticky%20card_natural.csv",na.strings = NULL)
summary(sticky)
str(sticky)
#add trap type as a column on each data file
bowls$Trap="bowl"
ramps$Trap="ramp"
sticky$Trap="sticky"
#combine data tables
library (plyr)
bowlramp <- rbind.fill (bowls, ramps)
allbugs <-rbind.fill (bowlramp, sticky)
#add column for region (south central north)
allbugs$region<-ifelse(allbugs$Site=="WLR", "South",
ifelse(allbugs$Site=="WPR", "South",
ifelse(allbugs$Site=="SNY", "South",
ifelse(allbugs$Site=="DAL", "North",
ifelse(allbugs$Site=="BAL", "North",
ifelse(allbugs$Site == "CHA", "North", "Central")
)))))
str(allbugs)
#To obtain richness counts
allbugs.rowsums <- rowSums(allbugs[,4:49]>0)
allbugs$richness <- allbugs.rowsums
#To obtain abundance counts
allbugs.abun <- rowSums(allbugs[,4:49])
allbugs$abundance <- allbugs.abun
#load vegan
library(vegan)
#calculate Shannon diversity
diversity <-diversity(allbugs[,4:49])
allbugs$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(allbugs[,4:49]))
allbugs$evenness <- evenness
#look at data set
summary(allbugs)
str(allbugs) #trap and region are listed as character
allbugs$Trap <- as.factor(allbugs$Trap)
allbugs$region <- as.factor(allbugs$region)
str(allbugs) #now trap and region are listed as a factor
##abundance linear mixed effects model
abunmodel <- lmer(abundance~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = 3153
allbugs.rowsums <- rowSums(allbugs[,5:50]>0)
allbugs$richness <- allbugs.rowsums
#To obtain abundance counts
allbugs.abun <- rowSums(allbugs[,5:50])
allbugs$abundance <- allbugs.abun
#load vegan
library(vegan)
#calculate Shannon diversity
diversity <-diversity(allbugs[,5:50])
allbugs$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(allbugs[,5:50]))
allbugs$evenness <- evenness
#look at data set
summary(allbugs)
str(allbugs) #trap and region are listed as character
allbugs$Trap <- as.factor(allbugs$Trap)
allbugs$region <- as.factor(allbugs$region)
str(allbugs) #now trap and region are listed as a factor
##richness linear mixed effects model
library (emmeans) #for pairwise comparisons
library(lme4)
library(lmerTest) #to obtain p values
richmodel <- lmer(richness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1071
summary(richmodel)
AIC(richmodel)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
#can't compare Site with replicate nested
rich.emm.s<-emmeans(richmodel,pairwise~Site) #comparing site richness
plot(richmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(richmodel))
qqline(resid(richmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richmodel)
influenceIndexPlot(richmodel, vars = c("Cook"), id = list(n = 3))
##abundance linear mixed effects model
abunmodel <- lmer(abundance~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = 3153
AIC(abunmodel)
abunmodel <- lmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs)
#region doesn't do anything in GLM, but you need it in to get values for site comparisons (and then can also get region comparisons)
summary(abunmodel)
AIC(abunmodel)
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = "poisson") #AIC 3223
summary(abunmodel)
AIC(abunmodel)
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(richness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
abunmodel <- lmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs) #AIC 3223
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(0.5)) #AIC 8521
AIC(abunmodel)
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(3)) #AIC 2690
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(3)) #AIC 2690
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2690
AIC(abunmodel)
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(0.8)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(0.4)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(3)) #AIC 2519
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.5)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.3)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.2)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(1.9)) #AIC 2519
AIC(abunmodel)
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(.5)) #AIC 2519
AIC(abunmodel)
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same for all
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abunmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abunmodel)
abunmodel <- lmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs) #AIC 3223
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
abunmodel <- glmer(abundance~region + (1|Date) + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same for all
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#check assumptions
dotchart(allbugs$diversity, main = "diversity", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(diversity ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(divmodel) # check distribution of residuals
##diversity linear mixed effects model
divmodel <- lmer(diversity~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = 287
AIC(divmodel)
divmodel <- lmer(diversity~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1074
AIC(divmodel)
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(divmodel)
AIC(divmodel)
anova(divmodel)
div.emm<-emmeans(divmodel,pairwise~region) #comparing region diversity
div.emm
#results: same for all
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(divmodel)
AIC(divmodel)
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + (1|Date) + (1|Trap) + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(divmodel)
AIC(divmodel)
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
div.emm<-emmeans(divmodel,pairwise~region) #comparing region diversity
div.emm
#results: same for all
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
div.emm.s<-emmeans(divmodel,pairwise~Site) #comparing site diversity
with(allbugs, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(diversity ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(divmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(divmodel))
qqline(resid(divmodel))
plot(simulateResiduals(divmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(divmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(divmodel)
influenceIndexPlot(divmodel, vars = c("Cook"), id = list(n = 3))
##evenness linear mixed effects model
evenmodel <- lmer(evenness~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = -94
AIC(evenmodel)
anova(evenmodel)
#check assumptions
dotchart(allbugs$evenness, main = "evenness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(evenness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
evenmodel <- lmer(evenness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(evenmodel)
AIC(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
#results: same for all
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
plot(evenmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenmodel))
qqline(resid(evenmodel))
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(evenmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenmodel)
influenceIndexPlot(evenmodel, vars = c("Cook"), id = list(n = 3))
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
