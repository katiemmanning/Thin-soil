abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same btw central-north, different btw central-south and north-south
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#can't compare Site with replicate nested
abun.emm.s<-emmeans(abunmodel,pairwise~Site) #comparing site abundance
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abunmodel)) # check density estimate of the distribution of residuals
#Can't use with glmer
# check for outliers influencing the data
outlierTest(abunmodel)
influenceIndexPlot(abunmodel, vars = c("Cook"), id = list(n = 3))
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(divmodel)
AIC(divmodel)
anova(divmodel)
div.emm<-emmeans(divmodel,pairwise~region) #comparing region diversity
div.emm
#results: same for all
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
#can't compare Site with replicate nested
div.emm.s<-emmeans(divmodel,pairwise~Site) #comparing site diversity
div.emm.s
#results:
div.cld.s<-multcomp::cld(div.emm.s, alpha = 0.05, Letters = LETTERS)
div.cld.s
#check assumptions
dotchart(allbugs$diversity, main = "diversity", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(diversity ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(divmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(divmodel))
qqline(resid(divmodel))
plot(simulateResiduals(divmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(divmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(divmodel)
influenceIndexPlot(divmodel, vars = c("Cook"), id = list(n = 3))
##evenness linear mixed effects model
evenmodel <- lmer(evenness~Site+region+(1|Date)+(1|Trap),data=allbugs)  #AIC = -94
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = -102
summary(evenmodel)
AIC(evenmodel)
anova(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region + Date + Trap + (1|Site:Replicate), data=allbugs)  #AIC = -102
summary(evenmodel)
AIC(evenmodel)
anova(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
#results: same for all
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region + (1|Date) + Trap + (1|Site:Replicate), data=allbugs)  #AIC = -102
#check assumptions
dotchart(allbugs$evenness, main = "evenness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(evenness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(evenmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenmodel))
qqline(resid(evenmodel))
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(evenmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenmodel)
influenceIndexPlot(evenmodel, vars = c("Cook"), id = list(n = 3))
#######
#ggplot box plots
library (ggplot2)
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
#site abundance by region
abundance.plot<-ggplot(allbugs, aes(x = factor(region, level = c("South","Central","North")), y = abundance, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="bottom")+
labs(title="", x="", y="Abundance (log10)")+
#theme (plot.title = element_text(hjust=0.5))+
scale_y_continuous(trans="log10")+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
abundance.plot
#site diversity by region
diversity.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = diversity, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
diversity.plot
#site evenness by region
evenness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = evenness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="Sites by Region", y="Evenness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
evenness.plot
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$Site))
#Bee analysis (species)
#bring in data (presence/absence)
bee_bowls <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees%20-%20Bowl_species.csv",na.strings = NULL)
summary(bee_bowls)
str(bee_bowls)
bee_ramps <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees%20-%20Ramp_species.csv",na.strings = NULL)
summary(bee_ramps)
str(bee_ramps)
#add trap type as a column on each data file
bee_bowls$Trap="bowl"
bee_ramps$Trap="ramp"
#combine data tables
library (plyr)
bees <- rbind.fill (bee_bowls, bee_ramps)
#add column for region (south central north)
bees$region<-ifelse(bees$Site=="WLR", "South",
ifelse(bees$Site=="WPR", "South",
ifelse(bees$Site=="SNY", "South",
ifelse(bees$Site=="DAL", "North",
ifelse(bees$Site=="BAL", "North",
ifelse(bees$Site == "CHA", "North", "Central")
)))))
str(bees)
View(bees)
##richness linear mixed effects model
richmodel <- lmer(richness~region + Date + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 1074
summary(richmodel)
AIC(richmodel)
#Bee analysis (species)
#bring in data (presence/absence)
bee_bowls <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/2019%20bees%20-%20Bowl_species.csv",na.strings = NULL)
#add trap type as a column on each data file
bee_bowls$Trap="bowl"
bee_ramps$Trap="ramp"
#combine data tables
library (plyr)
bees <- rbind.fill (bee_bowls, bee_ramps)
#add column for region (south central north)
bees$region<-ifelse(bees$Site=="WLR", "South",
ifelse(bees$Site=="WPR", "South",
ifelse(bees$Site=="SNY", "South",
ifelse(bees$Site=="DAL", "North",
ifelse(bees$Site=="BAL", "North",
ifelse(bees$Site == "CHA", "North", "Central")
)))))
str(bees)
anova(richmodel)
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
#results: same for all
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
#check assumptions
dotchart(allbugs$richness, main = "richness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(richness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(richmodel))
qqline(resid(richmodel))
plot(simulateResiduals(richmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richmodel)
influenceIndexPlot(richmodel, vars = c("Cook"), id = list(n = 3))
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2519
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
rich.emm<-emmeans(richmodel,pairwise~region) #comparing region richness
rich.emm
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same btw central-north, different btw central-south and north-south
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abunmodel)) # check density estimate of the distribution of residuals
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.5)) #AIC 2501
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2501
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.2)) #AIC 2501
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(1.5)) #AIC 2501
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same btw central-north, different btw central-south and north-south
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2.1)) #AIC 2501
##abundance linear mixed effects model
abunmodel <- glmer(abundance~region + Date + Trap + (1|Site:Replicate),data=allbugs, family = negative.binomial(2)) #AIC 2501
summary(abunmodel)
AIC(abunmodel)
anova(abunmodel)
abun.emm<-emmeans(abunmodel,pairwise~region) #comparing region abundance
abun.emm
#results: same btw central-north, different btw central-south and north-south
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#check assumptions
dotchart(allbugs$abundance, main = "abundance", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(abundance ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abunmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abunmodel))
qqline(resid(abunmodel))
plot(simulateResiduals(abunmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abunmodel)) # check density estimate of the distribution of residuals
#Can't use with glmer
# check for outliers influencing the data
outlierTest(abunmodel)
influenceIndexPlot(abunmodel, vars = c("Cook"), id = list(n = 3))
##diversity linear mixed effects model
divmodel <- lmer(diversity~region + Date + Trap + (1|Site:Replicate), data=allbugs)  #AIC = 284
summary(divmodel)
AIC(divmodel)
anova(divmodel)
div.emm<-emmeans(divmodel,pairwise~region) #comparing region diversity
div.emm
#results: same for all
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
#check assumptions
dotchart(allbugs$diversity, main = "diversity", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(diversity ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(divmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(divmodel))
qqline(resid(divmodel))
plot(simulateResiduals(divmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(divmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(divmodel)
influenceIndexPlot(divmodel, vars = c("Cook"), id = list(n = 3))
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region + Date + Trap + (1|Site:Replicate), data=allbugs)  #AIC = -102
summary(evenmodel)
AIC(evenmodel)
anova(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
#results: same btw central-north, different btw C-N and N-S
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
#check assumptions
dotchart(allbugs$evenness, main = "evenness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(evenness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(evenmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenmodel))
qqline(resid(evenmodel))
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
plot(simulateResiduals(divmodel)) # another way to check for normailty and homogeneity of variance
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
##evenness linear mixed effects model
evenmodel <- lmer(evenness~region + Date + Trap + (1|Site:Replicate), data=allbugs)  #AIC = -83
summary(evenmodel)
AIC(evenmodel)
anova(evenmodel)
even.emm<-emmeans(evenmodel,pairwise~region) #comparing region evenness
even.emm
#results: same btw central-north, different btw C-N and N-S
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
#check assumptions
dotchart(allbugs$evenness, main = "evenness", group = allbugs$region) # way to visualize outliers
with(allbugs, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(allbugs, bartlett.test(evenness ~ region)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(evenmodel) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenmodel))
qqline(resid(evenmodel))
plot(simulateResiduals(evenmodel)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(evenmodel)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenmodel)
influenceIndexPlot(evenmodel, vars = c("Cook"), id = list(n = 3))
#######
#ggplot box plots
library (ggplot2)
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
#site abundance by region
abundance.plot<-ggplot(allbugs, aes(x = factor(region, level = c("South","Central","North")), y = abundance, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="bottom")+
labs(title="", x="", y="Abundance (log10)")+
#theme (plot.title = element_text(hjust=0.5))+
scale_y_continuous(trans="log10")+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
abundance.plot
#site diversity by region
diversity.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = diversity, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
diversity.plot
#site evenness by region
evenness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = evenness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="Sites by Region", y="Evenness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
evenness.plot
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
geom_text(data=rich.cld, aes(y = 600, label = .group))
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
geom_text(data=rich.cld, aes(y = 600, label = .group))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
#site richness by region
richness.plot<-ggplot(allbugs, aes(x = factor(region,level = c("South","Central","North")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_brewer(palette="Paired",name="Sites:",
breaks=c("SNY", "WLR", "WPR", "BFB", "DGM", "SSH", "BAL", "CHA", "DAL"),
labels=c("Snyder hollow","W ladder", "W picnic rock", "Bedford barren","Dusty goldenrod meadow", "Slate shale hill", "Beaton alvar", "Cape Hurd alvar", "Davis alvar"))
richness.plot
allbugs_boxplot <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
#labels = c("A", "B", "C", "D"),
ncol = 1, nrow = 4,
common.legend = TRUE, legend = "bottom")
allbugs_boxplot
###
#mush together plots
library(ggpubr)
allbugs_boxplot <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
#labels = c("A", "B", "C", "D"),
ncol = 1, nrow = 4,
common.legend = TRUE, legend = "bottom")
allbugs_boxplot
pdf("allbugs_boxplot.pdf", height=8, width=8) #height and width in inches
allbugs_boxplot
dev.off()
#bring in data pooled by site
bowls_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Bowl_natural_pooled.csv",na.strings = NULL)
ramps_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Ramp_natural_pooled.csv",na.strings = NULL)
sticky_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Sticky%20card_natural_pooled.csv",na.strings = NULL)
#add trap type as a column on each data file
bowls_pooled$Trap="bowl"
ramps_pooled$Trap="ramp"
sticky_pooled$Trap="sticky"
#combine data tables
bowlramp_pooled <- rbind.fill (bowls_pooled, ramps_pooled)
allbugs_pooled <-rbind.fill (bowlramp_pooled, sticky_pooled)
#add column for region (south central north)
allbugs_pooled$region<-ifelse(allbugs_pooled$Site=="WLR", "South",
ifelse(allbugs_pooled$Site=="WPR", "South",
ifelse(allbugs_pooled$Site=="SNY", "South",
ifelse(allbugs_pooled$Site=="DAL", "North",
ifelse(allbugs_pooled$Site=="BAL", "North",
ifelse(allbugs_pooled$Site == "CHA", "North", "Central")
)))))
str(allbugs_pooled)
#bring in data pooled by site
bowls_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Bowl_natural_pooled.csv",na.strings = NULL)
ramps_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Ramp_natural_pooled.csv",na.strings = NULL)
sticky_pooled <- read.csv("https://raw.githubusercontent.com/katiemmanning/Thin-soil/main/Data/Insect%20ID%202019%20-%20Sticky%20card_natural_pooled.csv",na.strings = NULL)
View(sticky_order)
View(sticky_pooled)
#add trap type as a column on each data file
bowls_pooled$Trap="bowl"
ramps_pooled$Trap="ramp"
sticky_pooled$Trap="sticky"
#combine data tables
bowlramp_pooled <- rbind.fill (bowls_pooled, ramps_pooled)
allbugs_pooled <-rbind.fill (bowlramp_pooled, sticky_pooled)
#add column for region (south central north)
allbugs_pooled$region<-ifelse(allbugs_pooled$Site=="WLR", "South",
ifelse(allbugs_pooled$Site=="WPR", "South",
ifelse(allbugs_pooled$Site=="SNY", "South",
ifelse(allbugs_pooled$Site=="DAL", "North",
ifelse(allbugs_pooled$Site=="BAL", "North",
ifelse(allbugs_pooled$Site == "CHA", "North", "Central")
)))))
str(allbugs_pooled)
#Create matrix of environmental variables
env.matrix<-allbugs_pooled[c(1:4,51:52)]
View(allbugs_pooled)
#Create matrix of environmental variables
env.matrix<-allbugs_pooled[c(1:2,49:50)]
#create matrix of community variables
com.matrix<-allbugs_pooled[c(3:48)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300)
NMDS
###stress = 0.27
stressplot(NMDS)
#plot NMDS for region
#might need to change colors
#8 x 13
plot(NMDS, disp='sites', type="n")
#title(main="Arthropod community composition by region", cex.main=1.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$region, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "South")
ordiellipse(NMDS, env.matrix$region, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "North")
ordiellipse(NMDS, env.matrix$region, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "Central")
#add data points
points(NMDS, display="sites", select=which(env.matrix$region=="North"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$region=="Central"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$region=="South"), pch=15, col="#CC79A7")
#add legend
legend(0.955,1.12, title=NULL, pch=c(19,17,15), col=c("#E69F00","#009E73","#CC79A7"), cex=1.5, legend=c("North", "Central", "South"))
#bootstrapping and testing for differences between the groups (regions)
fit<-adonis(com.matrix ~ region, data = env.matrix, permutations = 999, method="bray")
fit
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$region))
#bootstrapping and testing for differences between the groups (regions)
fit<-adonis(com.matrix ~ region, data = env.matrix, permutations = 999, method="bray")
fit
